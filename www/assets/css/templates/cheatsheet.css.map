{"version":3,"sources":["webpack:///./resources/sass/templates/cheatsheet.scss","webpack:///./resources/sass/tools/mq.scss","webpack:///./resources/sass/variables.scss"],"names":[],"mappings":"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","file":"css/templates/cheatsheet.css","sourcesContent":["$ENV: production;\n@import \"../includes\";\n\nhtml {\n  background: #fff;\n  overflow: hidden;\n}\n\nbody {\n  display: block;\n  overflow: hidden;\n}\n\n/** Global stuff **/\n\n.cheatsheet.is-loading {\n  pointer-events: none;\n}\n\n/** Layout **/\n\n.cheatsheet-panels {\n  bottom: 0;\n  display: flex;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 2.5rem;\n  width: 100%;\n}\n\n.cheatsheet-panel {\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.cheatsheet-panel-header {\n  align-items: center;\n  border-bottom: 1px solid #ddd;\n  display: flex;\n  flex-shrink: 0;\n  height: 2.5rem;\n  justify-content: space-between;\n  padding: 0 1.5rem;\n\n  @include mq(from m) {\n    display: none;\n  }\n}\n\n.cheatsheet-panel-header button {\n  align-items: center;\n  background: none;\n  border: 0;\n  cursor: pointer;\n  display: flex;\n  font: inherit;\n  font-size: .875rem;\n}\n\n.cheatsheet-panel-header button svg {\n  margin-right: .5rem;\n}\n\n.cheatsheet-panel-scrollarea {\n  flex-grow: 1;\n  -webkit-overflow-scrolling: touch;\n  overflow-x: auto;\n}\n\n.cheatsheet-main {\n  background: $color-white;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 20rem;\n  }\n}\n\n/**\n * 1. Workaround for a bug in Firefox (tested with v66.0.1),\n *    that `padding-bottom` on an element with\n *    `overflow-y: auto/scroll`.\n */\n\n.cheatsheet-main-scrollarea {\n  padding: 1.5rem 1.5rem 0; /* 1 */\n\n  > *:last-child {\n    margin-bottom: 1.5rem !important; /* 1 */\n  }\n\n  @include mq(from m) {\n    padding: 3rem 3rem 0; /* 1 */\n\n    > *:last-child {\n      margin-bottom: 3rem !important; /* 1 */\n    }\n  }\n}\n\n/** Modes **/\n@include mq(to m) {\n  .cheatsheet-sections,\n  .cheatsheet-entries {\n    display: none;\n  }\n\n  .cheatsheet[data-show=\"menu\"] {\n    .cheatsheet-panel {\n      display: none;\n    }\n\n    .cheatsheet-sections {\n      display: flex;\n    }\n  }\n\n  .cheatsheet[data-show=\"entries\"] {\n    .cheatsheet-panel {\n      display: none;\n    }\n\n    .cheatsheet-entries {\n      display: flex;\n    }\n  }\n}\n\n/** Header **/\n\n.cheatsheet-header {\n  align-items: center;\n  background: #000;\n  color: #fff;\n  display: flex;\n  height: 2.5rem;\n  position: relative;\n  z-index: 1000000;\n}\n\n.cheatsheet-back {\n  align-items: center;\n  display: flex;\n  margin-left: auto;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-back > span {\n  font-family: $font-mono;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  padding-left: .5rem;\n\n  @include mq(to m) {\n    display: none;\n  }\n}\n\n.cheatsheet-header h1 {\n  font-family: $font-mono;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  margin: 0;\n  padding: 0 1.5rem;\n\n  @include mq(from m) {\n    width: 11rem;\n  }\n}\n\n.cheatsheet-header-left,\n.cheatsheet-header-right {\n  align-items: center;\n  display: flex;\n}\n\n/** Search Form **/\n\n.cheatsheet-header form {\n  align-items: center;\n  border-left: 1px solid rgba(#fff, .3);\n  border-right: 1px solid rgba(#fff, .3);\n  display: flex;\n  flex-basis: 20%;\n  flex-grow: 1;\n  height: 2.5rem;\n  margin-left: 0;\n  position: relative;\n\n  @include mq(from m) {\n    flex-grow: 0;\n    flex-shrink: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-header form svg {\n  margin-left: 1.25rem;\n}\n\n.cheatsheet-header form svg * {\n  fill: $color-white;\n}\n\n.cheatsheet-header form:focus-within svg * {\n  fill: $color-syntax-yellow;\n}\n\n.cheatsheet-header form input {\n  background: none;\n  border: 0;\n  color: $color-white;\n  font: inherit;\n  font-size: .875rem;\n  height: 2.5rem;\n  outline: 0;\n  padding: 0 1rem;\n  width: 100%;\n\n  &:focus {\n    color: $color-syntax-yellow;\n  }\n}\n\n.cheatsheet-header .awesomplete ul {\n  background: #000;\n  box-shadow: rgba(#000, .2) 0 2px 20px;\n  color: #fff;\n  font-size: .875rem;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 100%;\n}\n\n.cheatsheet-header .awesomplete li {\n  cursor: pointer;\n  line-height: 1.25em;\n  margin: 0;\n  overflow: hidden;\n  padding: .75rem 1rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.cheatsheet-header .awesomplete strong {\n  display: block;\n  font-size: .875rem;\n  font-weight: 400;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete small {\n  display: block;\n  font-size: .75rem;\n  opacity: .5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete li[aria-selected=\"true\"],\n.cheatsheet-header .awesomplete li:hover {\n  background: lighten($color-dark-gray, 5%);\n\n  & small {\n    color: #fff;\n  }\n}\n\n.cheatsheet-header .menu-search-view-all {\n  align-items: center;\n  display: flex;\n}\n\n/** Sections Navigation **/\n\n.cheatsheet-sections {\n  background: $color-background;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-basis: 11rem;\n    flex-grow: 0;\n  }\n}\n\n.cheatsheet-sections section {\n  padding: .75rem 0;\n}\n\n.cheatsheet-sections h2 {\n  font-family: $font-mono;\n  font-size: .875rem;\n  line-height: 1.5;\n  margin-bottom: .25rem;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-sections li {\n  font-family: $font-mono;\n  font-size: .75rem;\n}\n\n.cheatsheet-sections li a {\n  display: block;\n  padding: .25rem 1.5rem;\n}\n\n.cheatsheet-sections li a[aria-current] {\n  background: #ddd;\n}\n\n/** Entries Navigation **/\n\n.cheatsheet-entries {\n  background: $color-white;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-basis: 20%;\n    flex-grow: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-entries-scrollarea {\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-entries li {\n  border-bottom: 1px solid rgba(#000, .1);\n  font-size: .75rem;\n  position: relative;\n}\n\n.cheatsheet-entries li a {\n  align-items: center;\n  display: flex;\n  outline: 0;\n  padding: .75rem 0;\n}\n\n.cheatsheet-entry-icon {\n  align-items: center;\n  background: $color-background;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  margin-right: .75rem;\n  width: 2rem;\n}\n\n.cheatsheet-entry-icon svg {\n  height: 1rem;\n  width: 1rem;\n}\n\n.cheatsheet-entries li a[aria-current]::after {\n  background: $color-syntax-yellow;\n  bottom: 0;\n  content: \"\";\n  left: -1.5rem;\n  margin-left: -1px;\n  position: absolute;\n  top: 0;\n  width: 6px;\n  z-index: 1000;\n}\n\n.cheatsheet-entries li a strong {\n  display: block;\n  font-family: $font-mono;\n  font-weight: 500;\n}\n\n.cheatsheet-entries li a strong span {\n  background: #fff;\n  color: #999;\n  padding-left: .5rem;\n  position: absolute;\n  right: 0;\n  top: .75rem;\n}\n\n.cheatsheet-entries li a small {\n  color: #777;\n  font-size: .75rem;\n}\n\n/** Section overview **/\n\n.cheatsheet-section .intro {\n  max-width: 45rem;\n}\n\n.cheatsheet-section-toolbar {\n  display: flex;\n  margin-bottom: 1.5rem;\n  margin-top: 1.5rem;\n}\n\n.cheatsheet-section-toolbar > span {\n  background: $color-background;\n  border-radius: 3px;\n  display: flex;\n}\n\n.cheatsheet-section-toolbar a {\n  border-radius: 3px;\n  display: inline-block;\n  font-family: $font-mono;\n  font-size: .75rem;\n  line-height: 1;\n  padding: .5rem 1.5rem;\n  text-align: center;\n  width: 7rem;\n}\n\n.cheatsheet-section-toolbar a[aria-current] {\n  background: $color-syntax-yellow;\n}\n\n.cheatsheet-section-entries {\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-column-gap: 1.5rem;\n  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\n}\n\n.cheatsheet-section-entries a {\n  border-top: 1px solid #ddd;\n  display: block;\n  font-family: $font-mono;\n  font-size: .75rem;\n  height: 100%;\n  overflow: hidden;\n  padding: .5rem 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/** Article **/\n\n.cheatsheet-article-content {\n  margin: 0 auto;\n  max-width: 60rem;\n  overflow: hidden;\n}\n\n.cheatsheet-article-meta {\n  color: rgba($color-anthracite, .8);\n  font-size: .9rem;\n  margin-top: .5rem;\n\n  svg {\n    height: 13px;\n    margin-right: .2rem;\n    width: 13px;\n  }\n\n  > li {\n    padding: .25rem 0;\n  }\n\n  @include mq(from m) {\n    display: flex;\n\n    > li {\n      padding: 0 .5rem;\n\n      &:first-child {\n        padding-left: 0;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./resources/sass/templates/cheatsheet.scss","/* stylelint-disable block-closing-brace-empty-line-before, at-rule-empty-line-before */\n\n//  mµ\n//\n//  A simple library for handling media queries\n//  and breakpoints across SASS/CSS and JavaScript.\n//\n//  @author Fabian Michael <hallo@fabianmichael.de>\n//  @license MIT\n//\n//  Define your breakpoints here. Must be either in px\n//  or em units. Breakpoints will be converted to em by\n//  the library for best consistency across different\n//  browsers.\n//\n//  Read [PX, EM or REM Media Queries?](https://zellwk.com/blog/media-query-units/)\n//  by Zell Liew for more information on units in media queries.\n$mq-breakpoints: (\n  (xs 480px  4)\n  (sm 768px  8)\n  (md 1024px 12)\n  (lg 1280px 12)\n  (xl 1440px 12)\n) !default;\n\n//  Prints selectors for pseudo-elements, which are utilized\n//  by the JavaScript counterpart of the mµ library. Set to\n//  false, if you don’t need the JavaScript functionality or\n//  you want to call `@include mq-print-pseudo-rules()`\n//  manually.\n$mq-print-pseudo-rules: true !default;\n\n// Debug settings\n$mq-debug: false !default;\n$mq-debug-z-index: 10000 !default;\n$mq-debug-selector: \"body::after\" !default;\n\n//  Mixin for generating gte media queries\n//\n//  Usage:\n//\n//  @include mq(from md) {\n//    .nav {\n//      position: fixed;\n//    }\n//  }\n//\n//  or:\n//\n//  .nav {\n//    background: blue;\n//\n//    @include mq(from xs to sm) {\n//      background: red;\n//    }\n//  }\n//\n//\n//  Supported queries:\n//\n//  @include mq(md) { … }\n//  @include mq(from md) { … } // same as \"mq(md)\"\n//  @include mq(to md) { … }\n//  @include mq(from xs to md) { … }\n//\n//  With additional custom media queries:\n//\n//  @include mq(xs, '(orientation: landscape)') { … }\n//  @include mq(from xs to md, '(orientation: landscape)') { … }\n@mixin mq($query: false, $and: false) {\n\n  // Initialize variables\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if $query {\n    // $query is not false\n    @if type-of($query) == number {\n      $min-width: $query;\n    } @else if type-of($query) == list {\n\n      @if length($query) == 4 and nth($query, 1) == from and nth($query, 3) == to {\n        // from {breakpoint} to {breakpoint}\n\n        $min-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 2)));\n        $max-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 4)) - 1px);\n\n      } @else if length($query) == 2 {\n        // one keyword + breakpoint\n\n        $keyword: nth($query, 1);\n        $breakpoint: nth($query, 2);\n\n        @if $keyword == from {\n          // from {breakpoint}\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n        }\n\n        @else if $keyword == to {\n          // to {breakpoint}\n          $max-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint) - 1px);\n\n        } @else if $keyword == only {\n          // only {breakpoint}\n\n          $items-length: length($mq-breakpoints);\n          $next-breakpoint: false;\n\n          @for $i from 1 through $items-length {\n            $item:      nth($mq-breakpoints, $i);\n            $item-name: nth($item, 1);\n\n            @if $next-breakpoint == true {\n              // breakpoint was found in last iteration\n              $next-breakpoint: $item-name;\n            } @else if $breakpoint == $item-name {\n              // breakpoint found, will be assigned in next iteration\n              $next-breakpoint: true;\n            }\n          }\n\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n          @if type-of($next-breakpoint) != bool {\n            $max-width: mq-px2em(mq-retrieve-breakpoint-width($next-breakpoint) - 1px);\n          }\n\n        } @else {\n          @error \"Invalid breakpoint query supplied to mq()\";\n        }\n      }\n    } @else {\n      // {breakpoint} => from {breakpoint}\n      $min-width: mq-px2em(mq-retrieve-breakpoint-width($query));\n    }\n  }\n\n  // Build Media Query\n\n  @if $min-width != 0 {\n    $media-query: \"(min-width: #{$min-width})\";\n  }\n\n  @if $max-width != 0 {\n    @if $media-query != \"\" {\n      $media-query: \"#{$media-query} and \";\n    }\n    $media-query: \"#{$media-query} (max-width: #{$max-width})\";\n  }\n\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  $media-query: unquote(#{$media-query});\n\n  @if $media-query != \"\" {\n    // Only print a media query if it’s not empty\n    @media #{$media-query} {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n//  Converts a pixel value to it’s em equivalent, based on\n//  the browser’s assumed default font-size of 16px. As media\n//  queries ignore font-sizes set via CSS, this function does\n//  not an additional \"base font size\" to be set.\n//\n//  @return The em equivalent of given pixel value.\n@function mq-px2em($px) {\n\n  @if type-of($px) != number {\n    @error \"mq-px2em() value must be a number.\";\n    @return 0;\n  }\n\n  @if unitless($px) {\n    @if $px != 0 {\n      @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels for you\";\n    }\n    /* stylelint-disable-next-line length-zero-no-unit */\n    @return mq-px2em($px + 0px); // That may fail.\n  } @else if (unit($px) == em) {\n    @return $px;\n  }\n  @return ($px / 16px) * 1em;\n}\n\n// Retrieves the min-width of a breakpoint in px, assuming\n// a font-size of 16px.\n//\n// @return The min-width of a breakpoint in pixels\n@function mq-retrieve-breakpoint-width($name) {\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @if $name == $breakpoint-name {\n      @if unit($breakpoint-width) == em {\n        // Convert to px value, if breakpoints where defined\n        // in em\n        $breakpoint-width: $breakpoint-width / 16px;\n      }\n      @return $breakpoint-width;\n    }\n  }\n  @return \"Breakpoint #{$name} does not exist\";\n}\n\n// Prints the pseudo-rule(s) needed by the JS counterpart\n// of mµ.\n@mixin mq-print-pseudo-rules {\n\n  $breakpoint-names: \"\";\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name: nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n    $add: ' \"#{$breakpoint-name}\": \"(min-width: #{mq-px2em($breakpoint-width)})\" ';\n    @if $breakpoint-names != \"\" {\n      $breakpoint-names: \"#{$breakpoint-names},#{$add}\";\n    } @else {\n      $breakpoint-names: $add;\n    }\n  }\n\n  $breakpoint-names: \"{\" + $breakpoint-names + \"}\";\n\n  html::before {\n    /* Automatically generated by mq to be consumed by its JavaScript counterpart */\n    content: $breakpoint-names;\n    display: none;\n  }\n}\n\n@if $mq-print-pseudo-rules {\n  // Print pseudo-rules, if enabled\n  @include mq-print-pseudo-rules;\n}\n\n@mixin mq-debug {\n  // Print debug rules, if enabled\n  #{unquote($mq-debug-selector)} {\n    background: rgba(black, .75);\n    bottom: 0;\n    color: #fff;\n    display: block;\n    font-family: monospace;\n    font-size: 10px;\n    line-height: 1;\n    padding: 3px 6px;\n    position: fixed;\n    right: 0;\n    z-index: $mq-debug-z-index;\n  }\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @include mq($breakpoint-name) {\n      #{unquote($mq-debug-selector)} {\n        content: \"Breakpoint: #{$breakpoint-name} (>= #{$breakpoint-width}) | Template: \" attr(data-template);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./resources/sass/tools/mq.scss","// =====  Typography  ======================================================= //\n\n$font-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n$font-mono: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n\n$font-size-mono:   16px;\n$line-height-mono: 24px;\n$font-size-code:   14px;\n$line-height-code: 24px;\n\n$font-weight-regular:      400;\n$font-weight-medium:       700;\n$font-weight-bold:         700;\n$font-weight-black:        700;\n\n// =====  Colors  =========================================================== //\n\n// -----  Primary Palette  -------------------------------------------------- //\n\n$color-white:              #fff;\n$color-background:         #efefef;\n$color-muted:              #777;\n$color-light-gray:         #ced2d7;\n$color-anthracite:         #3c4350;\n$color-dark-gray:          #232529;\n$color-black:              #000;\n\n$color-inset: #ebebeb;\n$color-border: #ccc;\n\n$color-kirby-blue:         #4271ae;\n$color-kirby-blue-alt:     #5890d8;\n$color-focus-outline:        rgba($color-kirby-blue, .6);\n$color-focus-outline-alt:    rgba($color-kirby-blue-alt, .8);\n\n// -----  Colors for light backgrounds  ------------------------------------- //\n\n$color-red:                hsl(0, 71%, 55%);\n$color-orange:             hsl(29, 91%, 54%);\n$color-yellow:             hsl(47, 100%, 40%);\n$color-green:              hsl(65, 71%, 36%);\n$color-aqua:               hsl(183, 44%, 40%);\n$color-blue:               hsl(214, 45%, 47%);\n$color-purple:             hsl(285, 44%, 50%);\n\n// -----  Colors for dark backgrounds  -------------------------------------- //\n\n$color-syntax:             $color-background;\n$color-syntax-comment:     #a9aaad;\n$color-syntax-light-gray:  #cacbd1;\n$color-syntax-white:       #c5c9c6;\n\n$color-syntax-red:         #d16464;\n$color-syntax-orange:      #de935f;\n$color-syntax-yellow:      #f0c674;\n$color-syntax-green:       #a7bd68;\n$color-syntax-aqua:        #8abeb7;\n$color-syntax-blue:        #7e9abf;\n$color-syntax-purple:      #b294bb;\n\n// -----  Diverted colors --------------------------------------------------- //\n\n$color-info-background:    mix($color-blue, $color-background, 12%);\n$color-warning-background: mix($color-yellow, $color-background, 12%);\n\n// =====  Style  ============================================================ //\n\n$border-radius: 1px;\n$border-radius-link-backplane: 4px;\n$shadow: 0 2px 10px rgba(#000, .2);\n$element-spacing: 1.5em; // should be equal to line-height\n\n// =====  Breakpoints  ====================================================== //\n\n$mq-breakpoints: (\n  (\"\" 0)\n  (s 608px)\n  (m 896px)\n  (l 1200px)\n);\n$mq-debug: false;\n$mq-print-pseudo-rules: false;\n\n\n\n// WEBPACK FOOTER //\n// ./resources/sass/variables.scss"],"sourceRoot":""}